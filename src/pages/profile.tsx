import { useSession, getSession } from 'next-auth/react';
import NavBar from "../components/NavBar";
import Head from "next/head";
import Image from "next/image";
import { NextPage } from "next";
import Link from "next/link";
import { GetServerSideProps } from "next";
import prisma from "../../prisma/prisma";
import { User } from "@prisma/client";
import { useState } from "react";

type Session = ReturnType<typeof useSession>["data"];
type SessionNoNull = NonNullable<Session>;

type sessionProps = {
    session: Session;
};

interface UserProps {
    user: User;
}

const Profile: NextPage<UserProps> = ({ user }) => {
    const { data: session, status } = useSession();
    console.log(session)
    return (
        <div>
            <Head>
                <title>Properties</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="relative">
                <NavBar isLoggedIn={!!session} />

                <Image
                    src="/assets/interiorprofile.jpg"
                    alt="Interior Design"
                    width="0"
                    height="0"
                    sizes="100vw"
                    className="w-full h-screen"
                />
                <div className="absolute top-52 left-0 w-full h-1/2 flex m-50 items-center justify-center z-0">
                    {/* If session then show user */}
                    {session ? (
                        <UserDisplay user={user} />
                    ) : (
                        <Guest />
                    )}
                </div>
            </div>
        </div>
    );
};


// Authorised User
const UserDisplay: NextPage<UserProps> = ({ user }) => {
    return (
        <>
            <div className="p-10 w-3/6 bg-white rounded-lg shadow-lg flex flex-col items-center justify-center">
                <h1 className="text-3xl font-bold text-black pb-5">Profile</h1>
                <div className="flex flex-col items-left justify-center">
                    <h1 className="text-2xl font-bold text-black">
                        Name: {user.name}
                    </h1>
                    <h1 className="text-2xl font-bold text-black">
                        Surname: {user.surname}
                    </h1>
                    <h1 className="text-2xl font-bold text-black">
                    Date of Birth: {user.dob}
                    </h1>
                    <h1 className="text-2xl font-bold text-black">
                        Email: {user.email}
                    </h1>
                    <h1 className="text-2xl font-bold text-black">
                        Phone Number: {user.phoneNumber}
                    </h1>
                </div>
            </div>
        </>
    );
};

const Guest: NextPage = () => {
    return (
        <>
            <div className="absolute top-52 left-0 w-full h-1/2 flex m-50 items-center justify-center z-0">
                <h1 className="absolute top-28 text-center font-bold text-black text-5xl">
                    Log in to see your profile
                </h1>
                <Link href="/login">
                    <button className="px-8 py-3 mt-44 bg-white bg-opacity-75 text-blue-500 font-bold text-3xl rounded-md hover:shadow-lg hover:bg-transparent hover:border-white hover:text-white border-2 border-blue-500">
                        Login
                    </button>
                </Link>
            </div>
        </>
    );
};

export const getServerSideProps: GetServerSideProps<{}> = async (context) => {
    const session = await getSession(context);
    const email = session?.user?.email;

    const user = await prisma.user.findFirst({
        where: {
            email: email as string,
        },
    });

    context.res.setHeader('Cache-Control', 'no-store');

    return {
        props: {
            user: JSON.parse(JSON.stringify(user)),
        },
    };
};

export default Profile;
