import Head from "next/head";
import Layout from "../layout/layout";
import { FC } from "react";
import Link from "next/link";
import styles from "../styles/Form.module.css";
import Image from "next/image";
import { HiAtSymbol, HiUser } from "react-icons/hi";
import { FaLock } from "react-icons/fa";
import { useState } from "react";
import { useFormik } from "formik";
import { validateRegister } from "lib/validate";

export default function Register() {
    const [show, setShow] = useState({ password: false, cpassword: false });
    const formik = useFormik({
        initialValues: {
            username: "",
            email: "",
            password: "",
            cpassword: "",
        },
        validate: validateRegister,
        onSubmit: async (values) => {
            // const result = await signIn("credentials", {
            //     redirect: false,
            //     email: values.email,
            //     password: values.password,
            // });
            console.log(values);
        },
    });

    return (
        <Layout>
            <Head>
                <title>Register</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <section className="w-3/4 mx-auto flex flex-col gap-10">
                {/* Title */}
                <div className="title">
                    <h1 className="text-gray-800 text-4xl font-bold py-4">
                        Register
                    </h1>
                    <p className="w-3/4 mx-auto text-gray-400">Register idk</p>
                </div>

                {/* Form */}
                <form className="flex flex-col gap-5" onSubmit={formik.handleSubmit}>
                    {/* Username */}
                    <div className={styles.input_group}>
                        <input
                            className={styles.input_text}
                            type="text"
                            placeholder="Username"
                            {...formik.getFieldProps("username")}
                        />
                        <span className="icon flex items-center px-4">
                            <HiUser size={25} />
                        </span>
                    </div>
                    { formik.touched.username && formik.errors.username ? (
                        <div className="text-red-500 text-sm">
                            {formik.errors.username}
                        </div>
                    ) : null }

                    {/* Email */}
                    <div className={styles.input_group}>
                        <input
                            className={styles.input_text}
                            type="email"
                            placeholder="Email"
                            {...formik.getFieldProps("email")}
                        />
                        <span className="icon flex items-center px-4">
                            <HiAtSymbol size={25} />
                        </span>
                    </div>
                    { formik.touched.email && formik.errors.email ? (
                        <div className="text-red-500 text-sm">
                            {formik.errors.email}
                        </div>
                    ) : null }

                    {/* Password */}
                    <div className={styles.input_group}>
                        <input
                            className={styles.input_text}
                            type={show.password ? "text" : "password"}
                            placeholder="Password"
                            {...formik.getFieldProps("password")}
                        />
                        <span
                            className="icon flex items-center px-4"
                            onClick={() =>
                                setShow({ ...show, password: !show.password })
                            }
                        >
                            <FaLock size={20} />
                        </span>
                    </div>
                    { formik.touched.password && formik.errors.password ? (
                        <div className="text-red-500 text-sm">
                            {formik.errors.password}
                        </div>
                    ) : null }

                    {/* Confirm password */}
                    <div className={styles.input_group}>
                        <input
                            className={styles.input_text}
                            type={show.cpassword ? "text" : "password"}
                            placeholder="Confirm Password"
                            {...formik.getFieldProps("cpassword")}
                        />
                        <span
                            className="icon flex items-center px-4"
                            onClick={() =>
                                setShow({ ...show, cpassword: !show.cpassword })
                            }
                        >
                            <FaLock size={20} />
                        </span>
                    </div>
                    { formik.touched.cpassword && formik.errors.cpassword ? (
                        <div className="text-red-500 text-sm">
                            {formik.errors.cpassword}
                        </div>
                    ) : null }

                    {/* Login buttons */}
                    <div className="input-button">
                        <button className={styles.button} type="submit">
                            Register
                        </button>
                    </div>
                </form>

                <p className="text-center text-gray-400">
                    Already have an account?{" "}
                    <Link href={"/login"} className="text-blue-700">
                        Sign In
                    </Link>
                </p>
            </section>
        </Layout>
    );
}
