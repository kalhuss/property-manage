
// Prisma schema for the database

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid()) @unique
  name        String  
  surname     String
  dob         String
  phoneNumber String    @unique
  email       String    @unique
  password    String
  bankAdded   Boolean   @default(false)
  properties Property[]
  offers     Offer[]
  contracts  Contract[]
  bankDetails BankDetails[]
}

model Property {
  id               String   @id @default(uuid()) @unique
  propertyID       Int      @unique @default(autoincrement())
  price            String
  bedrooms         String
  bathrooms        String
  houseType        String
  address          String   @unique
  postcode         String
  tenure           String
  taxBand          String
  rent             String
  keyFeatures      String[]
  description      String   @db.Text
  contactNumber    String
  contactEmail     String
  sold             Boolean  @default(false)
  images           String[]
  floorPlan        String[]
  panoramicImages  String[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  offers           Offer[]
  contracts        Contract[]
}

model Offer {
  id               String   @id @default(uuid()) @unique
  amount           String
  offerStatus      String   @default("Pending")
  signed           Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  property         Property @relation(fields: [propertyId], references: [id])
  propertyId       String
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  contract         Contract[]
  mortgageImage    String[]
}

model Contract {
  id               String   @id @default(uuid()) @unique
  paid             Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  property         Property @relation(fields: [propertyId], references: [id])
  propertyId       String
  user             User     @relation(fields: [userId], references: [id])
  userId           String
  offer            Offer    @relation(fields: [offerId], references: [id])
  offerId          String
  contractPDF      String[]
}

model BankDetails {
  id               String   @id @default(uuid()) @unique
  accountId        String   @unique
  accountNumber    String
  sortCode         String
  address          String
  city             String
  postcode         String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id])
  userId           String
}
